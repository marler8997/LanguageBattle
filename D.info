


UnixShebang {
    StandardInterpreter rdmd
}

Tokenizer {
    SupportedEncondings [ASCII,UTF8,UTF16BE,UTF16LE,UTF32BE,UTF32LE]
    SupportsBom true
    SyntaxSensitive false
    SpecialTokens [
        Filename        __FILE__
        LineNumber      __LINE__
        ModuleName      __MODULE__
        FullyQualifiedFunctionName          __FUNCTION__
        FullyQualifiedFunctionNameWithTypes __PRETTY_FUNCTION__
        Date            __DATE__ 
        Eof             __EOF__
        Time            __TIME__
        Timestamp       __TIMESTAMP__
        CompilerVendor  __VENDOR__
        CompilerVersion __VERSION__
    ]
    KeywordSet {
        abstract alias align asm assert auto body bool break byte
        case cast catch cdouble cent cfloat char class const continue creal
        dchar debug default delegate delete deprecated do double
        else enum export extern false final finally float for foreach
        foreach_reverse function
        goto idouble if ifloat immutable import in inout int interface
        invariant ireal is lazy long macro mixin module new nothrow null
        out override package pragma private protected public pure
        real ref return scope shared short static struct super switch synchronized
        template this throw true try typedef typeid typeof
        ubyte ucent uint ulong union unittest ushort
        version void volatile wchar while with
        __FILE__ __MODULE__ __LINE__ __FUNCTION__ __PRETTY_FUNCTION__
        __gshared __traits __vector __parameters
    }
    Comments {
        SingleLine [//]
        MultiLine [
            /* */
            /+ +/ Nested
        ]
    }
}




NonGCHeap {
    SupportedBy StandardLibrary
}

GarbageCollection {
    Optional true
    Type ?
    // How does it handle reference counting...?
    // How is the garbage collector tied to the language?
    //    Can you have other kinds of garbage collection?
    // How many types of garbage collection are implemented?
    Note: StandardLibrary Designed with Garbage Collection
    Note: The path of least resistance is to use the GC
    Note: Can you completely omit the GC from the runtime?
}